name: Build Test and push
on: [push]
env:
  IMAGE_NAME: movieguessr
  REPO_NAME: idylank
  WAIT_HOSTS: localhost:8000

jobs:
  django-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repo
      - name: Build and run docker
        run: make test
      - name: Wait for Container to host webpage
        run: wget https://github.com/ufoscout/docker-compose-wait/releases/download/2.9.0/wait && chmod +x wait && ./wait
      - name: Run Django API  Tests
        id: run-api-tests
        run: docker exec web_dev python3 manage.py test movieguessr/tests/
      - name: Output summary to console
        run: echo ${{ steps.run-api-tests.outputs.summary }}
  push:
    runs-on: ubuntu-latest
    needs: django-tests  
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        name: Checkout repo
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push image to docker hub Container Registry
        run: make build-hub
  deploy: 
    runs-on: ubuntu-latest
    needs: push
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        name: Checkout repo
      - uses: marocchino/setup-ecs-cli@v1
        with:
          version: "v1.18.0"
      # The .env.prod is a dummy, to make sure the ecs-cli compose will work. The actual keys are set in the 
      # AWS Security Key manger. 
      - name: Deploy to AWS
        run:
          touch .env.prod && 
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" &&
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" &&
          export AWS_DEFAULT_REGION=eu-west-2 &&
          ecs-cli compose --file docker-compose.prod.yml --ecs-params ecs-param.yml service up --cluster MovieGuessrCluster
      
